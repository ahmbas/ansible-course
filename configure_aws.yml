- hosts: tag_three_tier_app_*_bastion
  become: yes
  tasks:
  - name: get ssh key name
    find:
      paths: /root/.ssh
      patterns: '*.pem'
    register: result

  - name: copy pem to tower
    fetch:
      src: "{{result.files[0].path}}"
      dest: /tmp/
    register: file
  - name: hi
    debug:
      msg: "{{file.dest}}"

- hosts: tag_three_tier_app_*_app
  become: yes
  vars:
    ansible_ssh_private_key_file: "{{file.dest}}"
    ansible_ssh_user: ec2-user
    ansible_user: ec2-user
  tags: configure_apps
  roles:
    - role: apps

- hosts: tag_three_tier_app_*_db
  become: yes
  vars:
    ansible_ssh_private_key_file: "{{file.dest}}"
    ansible_ssh_user: ec2-user
    ansible_user: ec2-user
  tags: configure_db
  roles:
    - role: appdbs

- hosts: tag_three_tier_app_*_frontend
  become: yes
  tags: configure_frontend
  vars:
    GUID:  "{{ GUID | default(lookup('env','GUID')) or 5414 }}"
    ansible_ssh_private_key_file: "{{file.dest}}"
    ansible_ssh_user: ec2-user
    ansible_user: ec2-user
  roles:
    - role: frontends

- hosts: tag_three_tier_app_*_bastion
  become: yes
  tags: test haproxy
  tasks:
  - name: ensure haproxy is running
    uri:
      url: http://{{item}}/
      status_code: 200
    with_items: "{{groups['frontends']|list}}"
